{
  "version": 3,
  "file": "options.bundle.css",
  "sources": [
    "Options.svelte",
    "Modal.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Modal from \"./components/Modal.svelte\";\n  import { setDarkTheme, getDarkTheme } from \"./services/storage.js\";\n  import { loadGlobalSettings } from \"./services/hooks.js\"\n  import GeneralOptions from \"./option_pages/GeneralOptions.svelte\";\n  import SaveHookOptions from \"./option_pages/SaveHookOptions.svelte\";\n  import { onMount } from \"svelte\";\n  let pageReady = false;\n  let settingPages = [\n    {\n      name: 'General',\n      fullName: 'General Settings'\n    },\n    {\n      name: 'Save Hooks',\n      fullName: 'Hooks Settings'\n    }\n  ]\n  let currentSettingPage = 0;\n  var changePage = (idx) => {\n    currentSettingPage = idx;\n  }\n\n  // Theme settings.\n  let darkTheme = false;\n  var changeTheme = (v) => {\n    darkTheme = v;\n    setDarkTheme(darkTheme);\n  };\n\n  // Global settings.\n  let globalSettings = {};\n  onMount(async () => {\n    getDarkTheme(function (v) {\n      darkTheme = v;\n    });\n    globalSettings = await loadGlobalSettings()\n    pageReady = true\n  });\n  var setGlobalSettings = (globalSettings) => {\n    chrome.storage.sync.set({globalSettings: globalSettings});\n  }\n</script>\n\n<style>\n  .container-table {\n    display: table;\n    width: 100vw;\n    height: 100vh;\n  }\n\n  #left-side-bar {\n    width: 20vw;\n    display: table-cell;\n    overflow: hidden;\n    height: 100%;\n    border-right: 1px solid gray;\n    padding: 10px;\n  }\n\n  .left-side-tile{\n    font-size: 2em;\n    width: 100%;\n    word-wrap: break-word;\n    padding: 10px;\n    margin-bottom: 5px;\n    cursor: pointer;\n  }\n\n  #right-panel {\n    display: table-cell;\n    width: auto;\n    height: 100%;\n    padding: 10px;\n  }\n</style>\n\n<svelte:head>\n  {#if darkTheme}\n    <link rel=\"stylesheet\" href=\"global-dark.css\" />\n  {:else}\n    <link rel=\"stylesheet\" href=\"global-light.css\" />\n  {/if}\n</svelte:head>\n{#if pageReady}\n  <Modal closeButton={false}>\n    <div class=\"container-table\">\n      <div id=\"left-side-bar\">\n        <div class=\"flex-collumn-container\">\n          <!-- Header -->\n          <div class=\"flex-row-container\" style=\"margin-bottom: 20px;\">\n            <img alt=\"logo\" src=\"images/logo32.png\" />\n            &nbsp &nbsp\n            <h1>PutAway</h1>\n          </div>\n          <!-- Setting options -->\n          {#each settingPages as page,index (page.name)}\n          {#if index==currentSettingPage}\n            <div class=\"left-side-tile\" style=\"background-color: #00ff0022\">\n              {page.name}\n            </div>\n            {:else}\n            <!-- svelte-ignore a11y-click-events-have-key-events -->\n            <div class=\"left-side-tile\" on:click={()=>changePage(index)}>\n              {page.name}\n            </div>\n            {/if}\n          {/each}\n        </div>\n      </div>\n      <div id=\"right-panel\">\n        <h1 style=\"font-size: 3em;\"><u>{settingPages[currentSettingPage].fullName}</u></h1>\n        <div style=\"overflow-x: hidden; overflow-y: auto; scrollbar-width: 0; height: 95vh;\">\n        {#if settingPages[currentSettingPage].name == \"General\"}\n          <GeneralOptions {darkTheme} {changeTheme} {globalSettings} {setGlobalSettings}/>\n        {:else if settingPages[currentSettingPage].name == \"Save Hooks\"}\n          <SaveHookOptions {globalSettings} {setGlobalSettings}/>\n        {/if}\n      </div>\n      </div>\n    </div>\n  </Modal>\n{:else}\n<div></div>\n{/if}\n",
    "<!--\n    Modified Methods\n 1. Open - This method returns a promise which will return an\n           object when modal is closed (may be null)\n 2. Close - You can call this and pass an object which will be returned\n           by the promise in open\n-->\n<script>\n    import { setContext as baseSetContext } from \"svelte\";\n    import { fade } from \"svelte/transition\";\n    export let key = \"simple-modal\";\n    export let closeButton = true;\n    export let closeOnEsc = true;\n    export let closeOnOuterClick = true;\n    export let transitionBg = fade;\n    export let transitionBgProps = { duration: 250 };\n    export let transitionWindow = transitionBg;\n    export let transitionWindowProps = transitionBgProps;\n    export let styleBg = { top: 0, left: 0 };\n    export let styleWindow = {};\n    export let styleContent = {};\n    export let setContext = baseSetContext;\n    let Component = null;\n    let props = null;\n    let background;\n    let wrap;\n    let customStyleBg = {};\n    let customStyleWindow = {};\n    let customStyleContent = {};\n    const camelCaseToDash = (str) =>\n        str.replace(/([a-zA-Z])(?=[A-Z])/g, \"$1-\").toLowerCase();\n    const toCssString = (props) =>\n        Object.keys(props).reduce(\n            (str, key) => `${str}; ${camelCaseToDash(key)}: ${props[key]}`,\n            \"\"\n        );\n    $: cssBg = toCssString(Object.assign({}, styleBg, customStyleBg));\n    $: cssWindow = toCssString(\n        Object.assign({}, styleWindow, customStyleWindow)\n    );\n    $: cssContent = toCssString(\n        Object.assign({}, styleContent, customStyleContent)\n    );\n\n    var resolver;\n    const open = (\n        NewComponent,\n        newProps = {},\n        style = { bg: {}, window: {}, content: {} }\n    ) =>\n        new Promise((resolve) => {\n            resolver = resolve;\n            Component = NewComponent;\n            props = newProps;\n            customStyleBg = style.bg || {};\n            customStyleWindow = style.window || {};\n            customStyleContent = style.content || {};\n        });\n    const close = (objectToReturn) => {\n        Component = null;\n        props = null;\n        customStyleBg = {};\n        customStyleWindow = {};\n        customStyleContent = {};\n        resolver(objectToReturn);\n    };\n    const handleKeyup = ({ key }) => {\n        if (closeOnEsc && Component && key === \"Escape\") {\n            event.preventDefault();\n            close();\n        }\n    };\n    const handleOuterClick = (event) => {\n        if (\n            closeOnOuterClick &&\n            (event.target === background || event.target === wrap)\n        ) {\n            event.preventDefault();\n            close();\n        }\n    };\n    setContext(key, { open, close });\n</script>\n\n<style>\n    * {\n        box-sizing: border-box;\n    }\n\n    .bg {\n        position: fixed;\n        z-index: 1000;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        width: 100vw;\n        height: 100vh;\n        background: rgba(0, 0, 0, 0.66);\n    }\n\n    .window-wrap {\n        position: relative;\n        margin: 2rem;\n        max-height: 100%;\n    }\n\n    .window {\n        position: relative;\n        width: 40rem;\n        max-width: 100%;\n        max-height: 100%;\n        margin: 2rem auto;\n        color: black;\n        border-radius: 0.5rem;\n        background: white;\n    }\n\n    .content {\n        position: relative;\n        padding: 1rem;\n        max-height: calc(100vh - 4rem);\n        overflow: auto;\n    }\n\n    .close {\n        display: block;\n        box-sizing: border-box;\n        position: absolute;\n        z-index: 1000;\n        top: 1rem;\n        right: 1rem;\n        margin: 0;\n        padding: 0;\n        width: 1.5rem;\n        height: 1.5rem;\n        border: 0;\n        color: black;\n        border-radius: 1.5rem;\n        background: white;\n        box-shadow: 0 0 0 1px black;\n        transition: transform 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\n            background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\n        -webkit-appearance: none;\n    }\n\n    .close:before,\n    .close:after {\n        content: \"\";\n        display: block;\n        box-sizing: border-box;\n        position: absolute;\n        top: 50%;\n        width: 1rem;\n        height: 1px;\n        background: black;\n        transform-origin: center;\n        transition: height 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\n            background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\n    }\n\n    .close:before {\n        -webkit-transform: translate(0, -50%) rotate(45deg);\n        -moz-transform: translate(0, -50%) rotate(45deg);\n        transform: translate(0, -50%) rotate(45deg);\n        left: 0.25rem;\n    }\n\n    .close:after {\n        -webkit-transform: translate(0, -50%) rotate(-45deg);\n        -moz-transform: translate(0, -50%) rotate(-45deg);\n        transform: translate(0, -50%) rotate(-45deg);\n        left: 0.25rem;\n    }\n\n    .close:hover {\n        background: black;\n    }\n\n    .close:hover:before,\n    .close:hover:after {\n        height: 2px;\n        background: white;\n    }\n\n    .close:focus {\n        border-color: #3399ff;\n        box-shadow: 0 0 0 2px #3399ff;\n    }\n\n    .close:active {\n        transform: scale(0.9);\n    }\n\n    .close:hover,\n    .close:focus,\n    .close:active {\n        outline: none;\n    }\n</style>\n\n<!--Base Modal Code taken from https://github.com/flekschas/svelte-simple-modal/blob/master/src/Modal.svelte -->\n<!--\n    Modified Methods\n 1. Open - This method returns a promise which will return an\n           object when modal is closed (may be null)\n 2. Close - You can call this and pass an object which will be returned\n           by the promise in open\n-->\n<svelte:window on:keyup={handleKeyup} />\n\n<div>\n    {#if Component}\n        <!-- svelte-ignore a11y-click-events-have-key-events -->\n        <div\n            class=\"bg\"\n            on:click={handleOuterClick}\n            bind:this={background}\n            transition:transitionBg={transitionBgProps}\n            style={cssBg}>\n            <div class=\"window-wrap\" bind:this={wrap}>\n                <div\n                    class=\"window\"\n                    transition:transitionWindow={transitionWindowProps}\n                    style={cssWindow}>\n                    {#if closeButton}\n                        <button on:click={close} class=\"close\" />\n                    {/if}\n                    <div class=\"content\" style={cssContent}>\n                        <svelte:component this={Component} {...props}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    {/if}\n    <slot />\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}